# app/core/premium.py
from __future__ import annotations

import os
from typing import List, Optional
from textwrap import dedent
from loguru import logger

try:
    # openai v1
    from openai import OpenAI
except Exception:
    OpenAI = None  # —á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç –Ω–µ –≤–∞–ª–∏–ª—Å—è, –µ—Å–ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –µ—â—ë –Ω–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞


def _demo_template(dream_text: str, warn: Optional[str] = None) -> str:
    bullets: List[str] = []
    if dream_text.strip():
        bullets.append("üìñ <b>–ö—Ä–∞—Ç–∫–∏–π –ø–µ—Ä–µ—Å–∫–∞–∑</b>\n‚Ä¢ " + dream_text.strip())

    bullets.append(
        "üîë <b>–°–∏–º–≤–æ–ª—ã –∏ –º–æ—Ç–∏–≤—ã</b>\n"
        "‚Ä¢ –í—ã–¥–µ–ª–∏–º –∫–ª—é—á–µ–≤—ã–µ –æ–±—Ä–∞–∑—ã –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É —Å–Ω–∞ (–≤ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ ‚Äî –≥–∏–±–∫–∏–π NLP-–∞–Ω–∞–ª–∏–∑)."
    )
    bullets.append(
        "üé≠ <b>–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–æ–Ω</b>\n"
        "‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–∏–º –≤–µ–¥—É—â–∏–µ —ç–º–æ—Ü–∏–∏ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã."
    )
    bullets.append(
        "üß† <b>–í–æ–∑–º–æ–∂–Ω—ã–π —Å–º—ã—Å–ª</b>\n"
        "‚Ä¢ –ì–∏–ø–æ—Ç–µ–∑–∞ –æ —Ç–µ–º–µ —Å–Ω–∞ —Å –æ–ø–æ—Ä–æ–π –Ω–∞ –∞—Ä—Ö–µ—Ç–∏–ø—ã –∏ —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç."
    )
    bullets.append(
        "‚úÖ <b>–®–∞–≥–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b>\n"
        "‚Ä¢ 1‚Äì3 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–∞, –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–¥ —Å—é–∂–µ—Ç —Å–Ω–∞."
    )

    footer = "\n<i>(–î–µ–º–æ –ø—Ä–µ–º–∏—É–º-–∞–Ω–∞–ª–∏–∑–∞. –ü–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ChatGPT API –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π —Ä–∞–∑–±–æ—Ä.)</i>"
    if warn:
        footer = f"\n<i>{warn}</i>" + footer

    return "<b>–ü—Ä–µ–º–∏—É–º-—Ä–∞–∑–±–æ—Ä —Å–Ω–∞</b>\n\n" + "\n\n".join(bullets) + footer


def premium_analysis(dream_text: str) -> str:
    mode = os.getenv("PREMIUM_MODE", "stub").lower()
    api_key = (os.getenv("OPENAI_API_KEY") or "").strip()
    model = os.getenv("OPENAI_MODEL", "gpt-4o-mini").strip()
    timeout = int(os.getenv("OPENAI_TIMEOUT", "20"))

    logger.debug(f"[premium] mode={mode} key_set={bool(api_key)} model={model}")

    if mode != "api":
        return _demo_template(dream_text)
    if not api_key:
        return _demo_template(dream_text, warn="(OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω ‚Äî —Ä–∞–±–æ—Ç–∞–µ–º –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ.)")
    if OpenAI is None:
        return _demo_template(dream_text, warn="(–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ openai –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚Äî –¥–µ–º–æ-—Ä–µ–∂–∏–º.)")

    try:
        client = OpenAI(api_key=api_key, timeout=timeout)

        system = dedent("""
        –¢—ã ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Å–Ω–æ–≤–∏–¥–µ–Ω–∏—è–º. –ö—Ä–∞—Ç–∫–æ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ–Ω.
        –í—ã–≤–æ–¥–∏ –ì–û–¢–û–í–´–ô HTML –¥–ª—è Telegram: —Ä–∞–∑–¥–µ–ª—ã —Å —ç–º–æ–¥–∑–∏, –∫–æ—Ä–æ—Ç–∫–∏–µ –ø—É–Ω–∫—Ç—ã.
        –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
        1) <b>–ü—Ä–µ–º–∏—É–º-—Ä–∞–∑–±–æ—Ä —Å–Ω–∞</b> (–∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –≤—ã–≤–æ–¥–∏, –æ–Ω –±—É–¥–µ—Ç –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –≤—ã—à–µ)
        2) üìñ <b>–ö—Ä–∞—Ç–∫–∏–π –ø–µ—Ä–µ—Å–∫–∞–∑</b> ‚Äî 1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
        3) üîë <b>–°–∏–º–≤–æ–ª—ã –∏ –º–æ—Ç–∏–≤—ã</b> ‚Äî 2‚Äì5 –ø—É–Ω–∫—Ç–æ–≤.
        4) üé≠ <b>–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–æ–Ω</b> ‚Äî 1‚Äì3 –ø—É–Ω–∫—Ç–∞.
        5) üß† <b>–í–æ–∑–º–æ–∂–Ω—ã–π —Å–º—ã—Å–ª</b> ‚Äî 1 –∞–±–∑–∞—Ü.
        6) ‚úÖ <b>–®–∞–≥–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</b> ‚Äî 3‚Äì5 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤.
        –ù–∏–∫–∞–∫–∏—Ö –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–æ–≤ –≤ –∫–æ–Ω—Ü–µ (–∏—Ö –¥–æ–±–∞–≤–∏—Ç –±–æ—Ç). –ù–∏–∫–∞–∫–∏—Ö –ø—Ä–æ—Å—å–± –æ –º–µ–¥–ø–æ–º–æ—â–∏.
        –Ø–∑—ã–∫ ‚Äî —Ä—É—Å—Å–∫–∏–π.
        """)

        user = dream_text.strip() or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–π –∏–ª–∏ –ø—É—Å—Ç–æ–π —Å–æ–Ω. –î–∞–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º—è–≥–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏."

        # Chat Completions API (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å 4o/4o-mini)
        resp = client.chat.completions.create(
            model=model,
            messages=[
                {"role": "system", "content": system},
                {"role": "user", "content": user},
            ],
            temperature=0.7,
            top_p=0.9,
            max_tokens=900,
        )

        html = resp.choices[0].message.content or ""
        # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ø–æ–¥—Ä–µ–∂–µ–º –æ–ø–∞—Å–Ω—ã–µ —Ç–µ–≥–∏
        html = html.replace("<script", "&lt;script").replace("</script>", "&lt;/script&gt;")
        return html

    except Exception as e:
        # –õ—é–±–∞—è –æ—à–∏–±–∫–∞ API ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å–µ–≥–¥–∞ —á—Ç–æ-—Ç–æ –ø–æ–ª—É—á–∏–ª
        return _demo_template(dream_text, warn=f"(–û—à–∏–±–∫–∞ OpenAI: {e})")
